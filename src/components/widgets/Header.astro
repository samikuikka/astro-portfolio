---
import { Icon } from "astro-icon/components";
import Logo from "~/components/Logo.astro";

import { trimSlash } from "~/utils/permalinks";
import type { CallToAction } from "~/types";
import { LanguagePicker } from "./LanguagePicker";
import ToggleMenu from "../common/ToggleMenu.astro";

interface Link {
  text?: string;
  href?: string;
  ariaLabel?: string;
  icon?: string;
}

interface MenuLink extends Link {
  links?: Array<MenuLink>;
}

export interface Props {
  id?: string;
  links?: Array<MenuLink>;
  actions?: Array<CallToAction>;
  isSticky?: boolean;
  isFullWidth?: boolean;
  showToggleTheme?: boolean;
  position?: string;
}

const {
  id = "header",
  links = [],
  actions = [],
  isSticky = false,
  isFullWidth = false,
  position = "center",
} = Astro.props;

const currentPath = `/${trimSlash(new URL(Astro.url).pathname)}`;
---

<header
  class:list={[
    { sticky: isSticky, relative: !isSticky },
    "top-0 z-40 flex-none mx-auto w-full border-b border-gray-50/0 transition-[opacity] ease-in-out",
  ]}
  {...isSticky ? { "data-aw-sticky-header": true } : {}}
  {...id ? { id } : {}}
>
  <div class="absolute inset-0"></div>
  <div
    class:list={[
      "relative text-default py-2 px-3 md:px-6 mx-auto w-full",
      {
        "md:flex md:justify-between": position !== "center",
      },
      {
        "md:grid md:grid-cols-3 md:items-center": position === "center",
      },
      {
        "max-w-7xl": !isFullWidth,
      },
    ]}
  >
    <div
      class:list={[
        { "mr-auto rtl:mr-0 rtl:ml-auto": position === "right" },
        "flex justify-between",
      ]}
    >
      <a class="flex items-center" href="/">
        <Logo />
      </a>
      <div class="flex items-center md:hidden space-x-2">
        <LanguagePicker client:idle />
        <ToggleMenu />
      </div>
    </div>
    <nav
      class="items-center w-full md:w-auto hidden md:flex md:mx-5 text-default overflow-y-auto overflow-x-hidden md:overflow-y-visible md:overflow-x-auto md:justify-self-center"
      aria-label="Main navigation"
    >
      <ul
        class="flex flex-col md:flex-row md:self-center w-full md:w-auto text-xl md:text-xl tracking-[0.01rem] font-medium md:justify-center"
      >
        {
          links.map(({ text, href, links }) => (
            <li class={links?.length ? "dropdown" : ""}>
              <a
                class:list={[
                  "hover:text-link dark:hover:text-white px-4 py-3 flex items-center whitespace-nowrap",
                  { "aw-link-active": href === currentPath },
                ]}
                href={href}
              >
                {text}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>
    <div
      class:list={[
        { "ml-auto rtl:ml-0 rtl:mr-auto": position === "left" },
        "hidden md:self-center md:flex items-center md:mb-0 fixed w-full md:w-auto md:static justify-end left-0 rtl:left-auto rtl:right-0 bottom-0 p-3 md:p-0 md:justify-self-end",
      ]}
    >
      <div class="items-center hidden md:flex justify-between w-full md:w-auto">
        <LanguagePicker client:idle />
      </div>
    </div>
  </div>
</header>
